name: Deploy to Production

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' 
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Build Docker Image
        run: docker build -t ecomarket-servicio-productos-servicios:prod .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Tag Docker Image
        run: docker tag ecomarket-servicio-productos-servicios:prod ${{ secrets.DOCKERHUB_USERNAME }}/ecomarket-servicio-productos-servicios:prod

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/ecomarket-servicio-productos-servicios:prod

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Run Deployment Script on Production Server
        run: |
          sshpass -p "${{ secrets.PROD_SERVER_PASSWORD }}" ssh -p ${{ secrets.PROD_SERVER_PORT }} -o StrictHostKeyChecking=no ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }} "/home/estudiante/ecomarket-app-backend-springboot/scripts/PROD/deploy_docker_image-ecomarket-servicio-productos-servicios-prod.sh"
